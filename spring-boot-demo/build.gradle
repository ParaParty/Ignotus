plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id 'org.jetbrains.kotlin.jvm'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

def requiresModules = [
    'cache',
    'database-exposed',
    'database-jpa',
    'exception',
    'foundation',
    'serializer',
    'support',
    'translation',
    'validation',
]

dependencies {
    for (item in requiresModules) {
        api project(path: ":$item")
    }

    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.5'
    api 'com.fasterxml.jackson.dataformat:jackson-dataformat-properties:2.12.5'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'

    api 'org.springframework.boot:spring-boot-starter-web:2.6.0'
    api 'org.springframework.security:spring-security-crypto:5.6.0'
    api 'org.springframework.boot:spring-boot-starter-aop:2.5.6'

    api 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.6'
    api 'org.springframework.boot:spring-boot-starter-data-redis:2.6.0'
    api 'org.springframework.boot:spring-boot-starter-data-redis:2.5.6'

    api 'mysql:mysql-connector-java:8.0.27'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
